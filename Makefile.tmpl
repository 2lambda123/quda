###### Local configuration:

CUDA_INSTALL_PATH = /usr/local/cuda

CPU_ARCH = x86_64   # x86 or x86_64
GPU_ARCH = sm_13    # sm_10, sm_11, sm_12, or sm_13
GPU_EMU  = false    # set to 'true' for device emulation

PYTHON = python2.6  # python 2.5 or later required for 'make generated'

######

INC = -I. -I$(CUDA_INSTALL_PATH)/include

ifeq ($(strip $(CPU_ARCH)), x86_64)
  LIB = -L$(CUDA_INSTALL_PATH)/lib64 -lcudart # for release 2.3 and later
  # LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart # for release 2.2 and earlier
  COPT =
else
  LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart
  COPT = -malign-double
endif

ifeq ($(strip $(GPU_EMU)), true)
  COPT += -D__DEVICE_EMULATION__
  NVCCOPT = -deviceemu
endif

CC = gcc
CFLAGS = -Wall -O3 -std=c99 $(COPT) $(INC)
CXX = g++
CXXFLAGS = -Wall -O3 $(COPT) $(INC)
NVCC = $(CUDA_INSTALL_PATH)/bin/nvcc 
NVCCFLAGS = -O3 $(NVCCOPT) -arch=$(GPU_ARCH) $(INC)
LDFLAGS = -fPIC $(LIB)

all: dslash_test invert_test su3_test pack_test

ILIB = libquda.a
ILIB_OBJS = blas_quda.o blas_reference.o dslash_quda.o dslash_reference.o   \
	gauge_quda.o inv_bicgstab_quda.o inv_cg_quda.o invert_quda.o        \
	spinor_quda.o util_quda.o
ILIB_HDRS = blas_quda.h blas_reference.h dslash_def.h dslash_quda.h         \
	dslash_reference.h enum_quda.h gauge_quda.h invert_quda.h           \
	io_spinor.h quda.h read_clover.h read_gauge.h reduce_complex_core.h \
	reduce_core.h reduce_triple_core.h spinor_quda.h util_quda.h
ILIB_CORE = dslash_core.h dslash_dagger_core.h

$(ILIB): $(ILIB_OBJS)
	ar cru $@ $(ILIB_OBJS)

dslash_test: dslash_test.o $(ILIB)
	$(CXX) $(LDFLAGS) $< $(ILIB) -o $@

invert_test: invert_test.o $(ILIB)
	$(CXX) $(LDFLAGS) $< $(ILIB) -o $@

su3_test: su3_test.o $(ILIB)
	$(CXX) $(LDFLAGS) $< $(ILIB) -o $@

pack_test: pack_test.o $(ILIB)
	$(CXX) $(LDFLAGS) $< $(ILIB) -o $@

generated:
	$(PYTHON) dslash_cuda_gen.py

clean:
	-rm -f *.o dslash_test invert_test su3_test pack_test $(ILIB)

%.o: %.c $(ILIB_HDRS)
	$(CC) $(CFLAGS) $< -c -o $@

%.o: %.cpp $(ILIB_HDRS)
	$(CXX) $(CXXFLAGS) $< -c -o $@

%.o: %.cu $(ILIB_HDRS) $(ILIB_CORE)
	$(NVCC) $(NVCCFLAGS) $< -c -o $@

.PHONY: all generated clean

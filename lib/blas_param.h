//
// Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[26][3] = {
  {  64,  416,   64},  // Kernel  0: copyCuda (high source precision)
  { 576,  512,  480},  // Kernel  1: copyCuda (low source precision)
  {  64,  192,  128},  // Kernel  2: axpbyCuda
  { 128,  192,  128},  // Kernel  3: xpyCuda
  {  64,  192,  128},  // Kernel  4: axpyCuda
  { 128,  192,  128},  // Kernel  5: xpayCuda
  {  64,  192,  128},  // Kernel  6: mxpyCuda
  {  64,  192,  736},  // Kernel  7: axCuda
  { 128,  128,  128},  // Kernel  8: caxpyCuda
  { 128,  128,   64},  // Kernel  9: caxpbyCuda
  {  64,   96,   96},  // Kernel 10: cxpaypbzCuda
  { 480,   96,   32},  // Kernel 11: axpyBzpcxCuda
  { 512,   96,   32},  // Kernel 12: axpyZpbxCuda
  { 256,   96,   64},  // Kernel 13: caxpbypzYmbwCuda
  { 128,  256,  256},  // Kernel 14: normCuda
  { 128,  256,  256},  // Kernel 15: reDotProductCuda
  { 256,  256,  512},  // Kernel 16: axpyNormCuda
  { 256,  256,  512},  // Kernel 17: xmyNormCuda
  { 128,  128,  256},  // Kernel 18: cDotProductCuda
  { 256,  128,  128},  // Kernel 19: xpaycDotzyCuda
  { 128,  128,  128},  // Kernel 20: cDotProductNormACuda
  { 128,  256,  128},  // Kernel 21: cDotProductNormBCuda
  { 256,  256,  512},  // Kernel 22: caxpbypzYmbwcDotProductWYNormYCuda
  { 512,  128,  128},  // Kernel 23: cabxpyAxCuda
  { 128,  256,  256},  // Kernel 24: caxpyNormCuda
  { 256,  256,   64}   // Kernel 25: caxpyXmazNormXCuda
};

static int blas_blocks[26][3] = {
  {16384, 16384,  8192},  // Kernel  0: copyCuda (high source precision)
  {32768,  2048,  1024},  // Kernel  1: copyCuda (low source precision)
  { 2048,  8192, 32768},  // Kernel  2: axpbyCuda
  { 1024,  8192, 65536},  // Kernel  3: xpyCuda
  { 2048,  8192, 32768},  // Kernel  4: axpyCuda
  { 1024,  8192, 65536},  // Kernel  5: xpayCuda
  { 2048,  8192, 65536},  // Kernel  6: mxpyCuda
  { 2048,  8192, 32768},  // Kernel  7: axCuda
  { 1024, 65536, 32768},  // Kernel  8: caxpyCuda
  { 1024, 32768, 32768},  // Kernel  9: caxpbyCuda
  { 2048, 32768, 16384},  // Kernel 10: cxpaypbzCuda
  {  256, 16384, 32768},  // Kernel 11: axpyBzpcxCuda
  {  256, 16384, 32768},  // Kernel 12: axpyZpbxCuda
  {  512, 16384, 32768},  // Kernel 13: caxpbypzYmbwCuda
  {   64,   256,   512},  // Kernel 14: normCuda
  {   64,  1024,  1024},  // Kernel 15: reDotProductCuda
  {  512,    64,  2048},  // Kernel 16: axpyNormCuda
  {  512,    64,  2048},  // Kernel 17: xmyNormCuda
  {   64,   512,   512},  // Kernel 18: cDotProductCuda
  {16384,  1024,    32},  // Kernel 19: xpaycDotzyCuda
  {  128,    64,    64},  // Kernel 20: cDotProductNormACuda
  {  128,   128,    64},  // Kernel 21: cDotProductNormBCuda
  {16384,   128,  1024},  // Kernel 22: caxpbypzYmbwcDotProductWYNormYCuda
  {  256, 32768, 32768},  // Kernel 23: cabxpyAxCuda
  { 4096,  1024,  1024},  // Kernel 24: caxpyNormCuda
  {16384,  2048,  2048}   // Kernel 25: caxpyXmazNormXCuda
};

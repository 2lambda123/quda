//
//  Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[24][3] = {
  {  64,   32,   32},  // Kernel  0: copyCuda (high source precision)
  {  32,   32,   32},  // Kernel  1: copyCuda (low source precision)
  {  64,   64,   64},  // Kernel  2: axpbyCuda
  {  64,   64,   64},  // Kernel  3: xpyCuda
  {  64,   64,   64},  // Kernel  4: axpyCuda
  {  64,   64,   64},  // Kernel  5: xpayCuda
  {  64,   64,   64},  // Kernel  6: mxpyCuda
  {  64,   64,   64},  // Kernel  7: axCuda
  {  64,   64,   64},  // Kernel  8: caxpyCuda
  {  64,   64,   64},  // Kernel  9: caxpbyCuda
  {  64,   64,   64},  // Kernel 10: cxpaypbzCuda
  {  64,   32,  480},  // Kernel 11: axpyBzpcxCuda
  { 192,   32,  480},  // Kernel 12: axpyZpbxCuda
  {  64,   64,  128},  // Kernel 13: caxpbypzYmbwCuda
  {  64,  128,   64},  // Kernel 14: sumCuda
  {  64,  128,   64},  // Kernel 15: normCuda
  {  64,   64,   64},  // Kernel 16: reDotProductCuda
  {  64,  256,   64},  // Kernel 17: axpyNormCuda
  {  64,  128,   64},  // Kernel 18: xmyNormCuda
  {  64,  128,   32},  // Kernel 19: cDotProductCuda
  {  64,   64,   32},  // Kernel 20: xpaycDotzyCuda
  {  64,   64,   64},  // Kernel 21: cDotProductNormACuda
  {  64,   64,   64},  // Kernel 22: cDotProductNormBCuda
  {  64,   64,   64}   // Kernel 23: caxpbypzYmbwcDotProductWYNormYCuda
};

static int blas_blocks[24][3] = {
  {  256, 65536, 65536},  // Kernel  0: copyCuda (high source precision)
  {32768,  2048, 16384},  // Kernel  1: copyCuda (low source precision)
  { 4096,   128,   128},  // Kernel  2: axpbyCuda
  { 4096,   128,   128},  // Kernel  3: xpyCuda
  { 4096,   128,   128},  // Kernel  4: axpyCuda
  { 4096,   128,   128},  // Kernel  5: xpayCuda
  { 4096,   128,   128},  // Kernel  6: mxpyCuda
  { 4096,   128,   128},  // Kernel  7: axCuda
  { 1024, 65536, 32768},  // Kernel  8: caxpyCuda
  { 1024, 65536, 65536},  // Kernel  9: caxpbyCuda
  { 4096,   128, 65536},  // Kernel 10: cxpaypbzCuda
  {  256,   128,  8192},  // Kernel 11: axpyBzpcxCuda
  { 2048,   128,  8192},  // Kernel 12: axpyZpbxCuda
  { 4096,   128, 32768},  // Kernel 13: caxpbypzYmbwCuda
  {  128,   128,   128},  // Kernel 14: sumCuda
  {  128,   128,   128},  // Kernel 15: normCuda
  {  128,   128,  2048},  // Kernel 16: reDotProductCuda
  { 1024,   512,   128},  // Kernel 17: axpyNormCuda
  { 1024,  2048,   128},  // Kernel 18: xmyNormCuda
  {  256,   256,   128},  // Kernel 19: cDotProductCuda
  {  256,   128,   128},  // Kernel 20: xpaycDotzyCuda
  {  256,  1024,  1024},  // Kernel 21: cDotProductNormACuda
  {  256,  1024,  1024},  // Kernel 22: cDotProductNormBCuda
  {  256,  1024,  1024}   // Kernel 23: caxpbypzYmbwcDotProductWYNormYCuda
};

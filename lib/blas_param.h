//
// Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[23][3] = {
  {  64,  256,   64},  // Kernel  0: copyCuda
  { 128,   64,   64},  // Kernel  1: axpbyCuda
  {  64,   64,  128},  // Kernel  2: xpyCuda
  {  64,   64,   64},  // Kernel  3: axpyCuda
  {  64,   64,  128},  // Kernel  4: xpayCuda
  {  64,  128,   64},  // Kernel  5: mxpyCuda
  {  64,  128,   64},  // Kernel  6: axCuda
  {  64,   64,   64},  // Kernel  7: caxpyCuda
  {  64,   64,  128},  // Kernel  8: caxpbyCuda
  {  64,  128,   64},  // Kernel  9: cxpaypbzCuda
  {  64,   64,   64},  // Kernel 10: axpyBzpcxCudax
  {  64,   64,   64},  // Kernel 11: axpyZpbxCuda
  {  64,  512,   64},  // Kernel 12: caxpbypzYmbwCuda
  {  64,  128,  128},  // Kernel 13: sumCuda
  {  64,  128,  128},  // Kernel 14: normCuda
  {  64,   64,   64},  // Kernel 15: reDotProductCuda
  {  64,  128,   64},  // Kernel 16: axpyNormCuda
  {  64,  128,   64},  // Kernel 17: xmyNormCuda
  {  64,  128,   64},  // Kernel 18: cDotProductCuda
  {  64,  128,   64},  // Kernel 19: xpaycDotzyCuda
  {  64,   64,   64},  // Kernel 20: cDotProductNormACuda
  {  64,   64,   64},  // Kernel 21: cDotProductNormBCuda
  {  64,   64,   64}   // Kernel 22: caxpbypzYmbwcDotProductWYNormYQuda
};

static int blas_blocks[23][3] = {
  {65536,   256, 32768},  // Kernel  0: copyCuda
  { 1024,   128,   128},  // Kernel  1: axpbyCuda
  { 1024,   128,    64},  // Kernel  2: xpyCuda
  { 4096,   128,   128},  // Kernel  3: axpyCuda
  { 2048,   128,    64},  // Kernel  4: xpayCuda
  { 4096,    64,   128},  // Kernel  5: mxpyCuda
  { 4096,   128,   128},  // Kernel  6: axCuda
  { 4096,   128, 32768},  // Kernel  7: caxpyCuda
  { 8192,   128, 65536},  // Kernel  8: caxpbyCuda
  { 4096,   128, 32768},  // Kernel  9: cxpaypbzCuda
  { 8192,    64,  2048},  // Kernel 10: axpyBzpcxCudax
  {   64,    64,  2048},  // Kernel 11: axpyZpbxCuda
  { 4096,  4096, 16384},  // Kernel 12: caxpbypzYmbwCuda
  {  128,   512,   128},  // Kernel 13: sumCuda
  {  128,   128,   128},  // Kernel 14: normCuda
  {  128,   128,  4096},  // Kernel 15: reDotProductCuda
  { 1024,   256,   128},  // Kernel 16: axpyNormCuda
  { 1024,   256,   128},  // Kernel 17: xmyNormCuda
  {  128,   128,  2048},  // Kernel 18: cDotProductCuda
  {   64,   128,  2048},  // Kernel 19: xpaycDotzyCuda
  { 1024,  1024,  1024},  // Kernel 20: cDotProductNormACuda
  {  256,  1024,  2048},  // Kernel 21: cDotProductNormBCuda
  { 1024,  2048,   128}   // Kernel 22: caxpbypzYmbwcDotProductWYNormYQuda
};

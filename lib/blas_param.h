//
// Auto-tuned blas CUDA parameters, generated by blas_test
//

static int blas_threads[23][3] = {
  { 224,   64,  544},  // Kernel  0: copyCuda (high source precision)
  { 544,   32,  416},  // Kernel  1: copyCuda (low source precision)
  { 544,   96,  128},  // Kernel  2: axpbyCuda
  { 288,   96,  128},  // Kernel  3: xpyCuda
  { 544,   96,  128},  // Kernel  4: axpyCuda
  { 544,   96,  128},  // Kernel  5: xpayCuda
  { 192,   96,  128},  // Kernel  6: mxpyCuda
  { 544,  192,  192},  // Kernel  7: axCuda
  { 448,  128,   96},  // Kernel  8: caxpyCuda
  { 544,  128,   96},  // Kernel  9: caxpbyCuda
  { 224,   96,   96},  // Kernel 10: cxpaypbzCuda
  {  64,   96,   96},  // Kernel 11: axpyBzpcxCuda
  { 448,   96,   96},  // Kernel 12: axpyZpbxCuda
  { 448,  128,   96},  // Kernel 13: caxpbypzYmbwCuda
  { 128,  256,  256},  // Kernel 14: normCuda
  { 128,  128,  128},  // Kernel 15: reDotProductCuda
  { 128,  256,  256},  // Kernel 16: axpyNormCuda
  {  64,  256,  256},  // Kernel 17: xmyNormCuda
  { 256,  128,  512},  // Kernel 18: cDotProductCuda
  { 128,  128,  512},  // Kernel 19: xpaycDotzyCuda
  { 128,  128,  128},  // Kernel 20: cDotProductNormACuda
  { 128,  128,  128},  // Kernel 21: cDotProductNormBCuda
  { 128,  128,  256}   // Kernel 22: caxpbypzYmbwcDotProductWYNormYCuda
};

static int blas_blocks[23][3] = {
  {  512,  8192,    64},  // Kernel  0: copyCuda (high source precision)
  {32768, 65536,    64},  // Kernel  1: copyCuda (low source precision)
  {   64,  4096, 16384},  // Kernel  2: axpbyCuda
  {  256,  4096, 65536},  // Kernel  3: xpyCuda
  {   64,  4096, 16384},  // Kernel  4: axpyCuda
  {   64,  4096, 65536},  // Kernel  5: xpayCuda
  {  256,  4096, 16384},  // Kernel  6: mxpyCuda
  {   64,  2048, 65536},  // Kernel  7: axCuda
  {  128,  8192, 65536},  // Kernel  8: caxpyCuda
  {   64, 65536,  4096},  // Kernel  9: caxpbyCuda
  {  128, 32768, 65536},  // Kernel 10: cxpaypbzCuda
  { 1024,  4096,  4096},  // Kernel 11: axpyBzpcxCuda
  {   64,  4096,  4096},  // Kernel 12: axpyZpbxCuda
  {  128,  4096, 65536},  // Kernel 13: caxpbypzYmbwCuda
  {   64,   128,   256},  // Kernel 14: normCuda
  {   64,    64,  1024},  // Kernel 15: reDotProductCuda
  {  512,    64,  1024},  // Kernel 16: axpyNormCuda
  { 1024,    64,   256},  // Kernel 17: xmyNormCuda
  {   32,    64,   128},  // Kernel 18: cDotProductCuda
  {  512,    64,   128},  // Kernel 19: xpaycDotzyCuda
  {   64,    64,    64},  // Kernel 20: cDotProductNormACuda
  {   64,    64,    64},  // Kernel 21: cDotProductNormBCuda
  { 2048,   512,   128}   // Kernel 22: caxpbypzYmbwcDotProductWYNormYCuda
};

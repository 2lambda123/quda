###### Local configuration:

CUDA_INSTALL_PATH = /usr/local/cuda

CPU_ARCH = x86_64   # x86 or x86_64
GPU_ARCH = sm_13    # sm_10, sm_11, sm_12, or sm_13
GPU_EMU  = false    # set to 'true' for device emulation

PYTHON = python     # python 2.5 or later required for 'make gen'
DEVICE = 0          # CUDA device to use for 'make tune'

COMMS = overlap     # set to overlap for overalpping comms and computer

BUILD_3D = false    # set to 'true' to build 3D Dslash

DO_QMP = false 

FECC = gcc	    # Front end CC
FECXX = g++         # Front end CXX

OMPI_HOME=/usr/mpi/gcc/openmpi-1.3.2
MPICC=$(OMPI_HOME)/bin/mpicc
MPICXX=$(OMPI_HOME)/bin/mpicxx
QMP_HOME=/home/bjoo/Devel/QCD/install/qmp/qmp2-1-6/openmpi
QMP_CFLAGS=$(shell $(QMP_HOME)/bin/qmp-config --cflags)
QMP_LDFLAGS=$(shell $(QMP_HOME)/bin/qmp-config --ldflags)
QMP_LIBS=$(shell $(QMP_HOME)/bin/qmp-config --libs)

######
RUN = $(OMPI_HOME)/bin/mpirun -n 1 
INC = -I$(CUDA_INSTALL_PATH)/include

ifeq ($(strip $(CPU_ARCH)), x86_64)
  LIB = -L$(CUDA_INSTALL_PATH)/lib64 -lcudart # for release 2.3 and later
  # LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart # for release 2.2 and earlier
  COPT =
else
  LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart
  COPT = -malign-double
endif

ifeq ($(strip $(GPU_EMU)), true)
  COPT += -D__DEVICE_EMULATION__
  NVCCOPT = -deviceemu
endif

ifeq ($(strip $(BUILD_3D)), true)
  COPT += -DBUILD_3D_DSLASH
  NVCCOPT += -DBUILD_3D_DSLASH
endif

ifeq ($(strip $(COMMS)), overlap)
  COPT += -DOVERLAP_COMMS
  NVCCOPT += -DOVERLAP_COMMS
endif

ifeq ($(strip $(DO_QMP)), true)
  RUN = $(OMPI_HOME)/bin/mpirun -n 1
  CC = $(MPICC)
  CXX = $(MPICXX)
  INC += -DQMP_COMMS $(QMP_CFLAGS)
  LIB += $(QMP_LDFLAGS) $(QMP_LIBS)
else 
  RUN =
  CC  = $(FECC)
  CXX = $(FECXX)
endif

CFLAGS = -Wall -O3 -std=c99 $(COPT) $(INC)
CXXFLAGS = -Wall -O3 $(COPT) $(INC)
NVCC = $(CUDA_INSTALL_PATH)/bin/nvcc 
NVCCFLAGS = -O3 $(NVCCOPT) -arch=$(GPU_ARCH) $(INC)
LDFLAGS = -fPIC $(LIB)

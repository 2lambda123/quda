###### Local configuration:

CUDA_INSTALL_PATH = /usr/local/cuda-3.0

CPU_ARCH = x86_64   # x86 or x86_64
GPU_ARCH = sm_12    # sm_10, sm_11, sm_12, or sm_13
GPU_EMU  = false    # set to 'true' for device emulation

PYTHON = python     # python 2.5 or later required for 'make gen'
DEVICE = 0          # CUDA device to use for 'make tune'

COMMS = overlap     # set to overlap for overalpping comms and computer

BUILD_3D = false    # set to 'true' to build 3D Dslash

OMPI_HOME=/usr/lib64/openmpi/1.3.2-gcc
QMP_HOME=/home/rbabich/lqcd/install/qmp
QMP_CFLAGS=$(shell $(QMP_HOME)/bin/qmp-config --cflags)
QMP_LDFLAGS=$(shell $(QMP_HOME)/bin/qmp-config --ldflags)
QMP_LIBS=$(shell $(QMP_HOME)/bin/qmp-config --libs)

######

INC = -I$(CUDA_INSTALL_PATH)/include

ifeq ($(strip $(CPU_ARCH)), x86_64)
  LIB = -L$(CUDA_INSTALL_PATH)/lib64 -lcudart # for release 2.3 and later
  # LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart # for release 2.2 and earlier
  COPT =
else
  LIB = -L$(CUDA_INSTALL_PATH)/lib -lcudart
  COPT = -malign-double
endif

ifeq ($(strip $(GPU_EMU)), true)
  COPT += -D__DEVICE_EMULATION__
  NVCCOPT = -deviceemu
endif

ifeq ($(strip $(BUILD_3D)), true)
  COPT += -DBUILD_3D_DSLASH
  NVCCOPT += -DBUILD_3D_DSLASH
endif

ifeq ($(strip $(COMMS)), overlap)
  COPT += -DOVERLAP_COMMS
  NVCCOPT += -DOVERLAP_COMMS
endif

CC = $(OMPI_HOME)/bin/mpicc
CFLAGS = -Wall -O3 -std=c99 $(QMP_CFLAGS) $(COPT) $(INC)
CXX = $(OMPI_HOME)/bin/mpicxx
CXXFLAGS = -Wall -O3 $(QMP_CFLAGS) $(COPT) $(INC)
NVCC = $(CUDA_INSTALL_PATH)/bin/nvcc 
NVCCFLAGS = -O3 $(NVCCOPT) -arch=$(GPU_ARCH) $(INC) $(QMP_CFLAGS)
LDFLAGS = -fPIC $(QMP_LDFLAGS) $(LIB) $(QMP_LIBS)
